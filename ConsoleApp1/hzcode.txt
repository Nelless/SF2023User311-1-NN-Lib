/*List<string> Times = new List<string>(); // "10:00:00 60"
            List<string> Intrvls = new List<string>();
            List<string> IntrvlsReserve = new List<string>();

            for (int i = 0; i < intervals.Count; i++)
            {
                Times.Add($"{intervals[i]} {durations[i]}");
            }

            Console.WriteLine();
            Console.WriteLine("Резервные интервалы: ");

            foreach (string intrvl in Times)
            {
                Console.WriteLine(intrvl);
            }

            while (true)
            {

                // если начальное время не существует в резерве
                if (!intervals.Contains(startWorkingTime.ToString()))
                {

                    Console.WriteLine($"{startWorkingTime:hh\\:mm} не содержится в резерве");

                    // если в период консультации есть резерв, то пропустить время для консультации
                    foreach (string str in intervals)
                    {
                        TimeSpan span = TimeSpan.Parse(str);

                        bool resultat = (startWorkingTime < span) && ((startWorkingTime + consultation) > span);


                        if (resultat == true)
                        {
                            Console.WriteLine($"{span} находится между {startWorkingTime:hh\\:mm} и {(startWorkingTime + consultation):hh\\:mm}");
                            startWorkingTime = span;
                            Console.WriteLine("Выход из цикла for");
                            Console.WriteLine($"{startWorkingTime:hh\\:mm}");
                            break;

                        }
                    }

                    if (!intervals.Contains(startWorkingTime.ToString()))
                    {
                        // запись в массив разрешенных интервалов
                        Intrvls.Add($"{startWorkingTime:hh\\:mm}-{(startWorkingTime + consultation):hh\\:mm}");
                        // обновление начала
                        startWorkingTime = startWorkingTime + consultation;
                        Console.WriteLine($"Начало: {startWorkingTime:hh\\:mm}");
                    }

                }
                else
                {
                    Console.WriteLine($"{startWorkingTime:hh\\:mm} содержится в резерве");
                    // если начало существует в резерве

                    // находим элемент, с которым начало совпало в резерве
                    foreach (string p in Times)
                    {

                        if (startWorkingTime == TimeSpan.Parse(p.Split(' ')[0]))
                        {
                            TimeSpan span = TimeSpan.Parse(p.Split(' ')[0]);
                            // вычисляем длительность резерва
                            // добавляем интервал в резервный массив
                            IntrvlsReserve.Add($"{span:hh\\:mm}-{(span + TimeSpan.FromMinutes(Convert.ToInt32(p.Split(' ')[1]))):hh\\:mm}");
                            // вычисляем начало
                            startWorkingTime = span + TimeSpan.FromMinutes(Convert.ToInt32(p.Split(' ')[1]));
                            Console.WriteLine($"Начало: {startWorkingTime:hh\\:mm}");
                        }
                    }

                }

                if (startWorkingTime >= endWorkingTime)
                {
                    break;
                }
            }

            Console.WriteLine();
            Console.WriteLine("Разрешенные интервалы: ");

            int t = 0;
            string[] answer = new string[Intrvls.Count];

            foreach (string interval in Intrvls)
            {
                Console.WriteLine(interval);
                answer[t] = interval;
                t++;
            }

             Console.WriteLine();
             Console.WriteLine("Зарезервированные интервалы: ");

            foreach (string interval in IntrvlsReserve)
            {
             Console.WriteLine(interval);
            }

            Console.WriteLine(answer); // массив строк формата HH:mm - HH:mm*/